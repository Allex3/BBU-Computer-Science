     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fprintf, fopen, scanf, fclose     ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import scanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  import fclose msvcrt.dll
    14                                                            
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 7700                        access_mode db "w", 0 
    18 00000002 00<rept>                    file_name times 30 db 0
    19 00000020 00<rept>                    text times 120 db 0
    20 00000098 FFFFFFFF                    file_descriptor dd -1
    21 0000009C 7200                        access_mode_read db "r", 0
    22                                      
    23 0000009E 25732E74787400              get_name_format db "%s.txt", 0
    24 000000A5 257300                      format db "%s", 0
    25                                  
    26                                  
    27                                  ; Read a file name and a text from the keyboard. Create a file with that name in the current folder and write the text that has been read to file. Observations: The file name has maximum 30 characters. The text has 
    28                                  segment code use32 class=code
    29                                      start:
    30 00000000 68[02000000]                    push dword file_name
    31 00000005 68[A5000000]                    push dword format
    32 0000000A FF15[00000000]                  call [scanf]
    33 00000010 83C408                          add esp, 2*4
    34                                          
    35 00000013 68[20000000]                    push dword text
    36 00000018 68[A5000000]                    push dword format
    37 0000001D FF15[00000000]                  call [scanf]
    38 00000023 83C408                          add esp, 2*4
    39                                          
    40 00000026 68[00000000]                    push dword access_mode
    41 0000002B 68[02000000]                    push dword file_name
    42 00000030 FF15[00000000]                  call [fopen]
    43 00000036 83C408                          add esp, 2*4
    44                                          
    45 00000039 A3[98000000]                    mov dword[file_descriptor], eax
    46                                          
    47 0000003E 83F800                          cmp eax, 0
    48 00000041 7428                            je end_of_file
    49                                  
    50                                          
    51 00000043 68[20000000]                    push dword text
    52 00000048 68[A5000000]                    push dword format
    53 0000004D FF35[98000000]                  push dword [file_descriptor]
    54 00000053 FF15[00000000]                  call [fprintf]
    55 00000059 83C40C                          add esp, 3*4
    56                                          
    57 0000005C FF35[98000000]                  push dword [file_descriptor]
    58 00000062 FF15[00000000]                  call [fclose]
    59 00000068 83C404                          add esp, 4
    60                                          
    61                                          end_of_file:
    62                                          
    63                                      
    64                                          ; exit(0)
    65 0000006B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    66 0000006D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
