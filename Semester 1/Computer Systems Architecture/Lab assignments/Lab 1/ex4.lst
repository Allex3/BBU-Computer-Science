     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0A                          a db 10
    14 00000001 05                          b db 5
    15 00000002 03                          c db 3
    16 00000003 14                          d db 20
    17 00000004 <res 00000001>              res resb 1
    18                                  
    19                                  ; (a-b-b-c)+(a-c-c-d)
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; AL = a-b-b-c, BL=a-c-c-d
    23 00000000 A0[00000000]                    mov AL, [a] ; again, no need to use byte[a] since everyone is 1 byte
    24 00000005 2A05[01000000]                  sub AL, [b]
    25 0000000B 2A05[01000000]                  sub AL, [b] 
    26 00000011 2A05[02000000]                  sub AL, [c] 
    27                                          
    28 00000017 8A1D[00000000]                  mov BL, [a]
    29 0000001D 2A1D[02000000]                  sub BL, [c]
    30 00000023 2A1D[02000000]                  sub BL, [c]
    31 00000029 2A1D[03000000]                  sub BL, [d]
    32                                          
    33 0000002F 00D8                            add AL, BL
    34 00000031 A2[04000000]                    mov [res], AL
    35                                          
    36                                      
    37                                          ; exit(0)
    38 00000036 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 00000038 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
